package lagatrix.gui.window;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import lagatrix.connection.RequesterManager;
import lagatrix.connection.communicators.AESCommunicator;
import lagatrix.entities.dto.os.OSInformation;
import lagatrix.exceptions.BadExecutionException;
import lagatrix.exceptions.connection.ConnectionException;
import lagatrix.gui.components.simple.MenuLabel;
import lagatrix.gui.views.main.form.MainView;

/**
 * This windows represents the main window of the program.
 *
 * @author javierfh03
 * @since 0.1
 */
public class MainWindow extends javax.swing.JFrame {

    private MainView selectedView;
    private AESCommunicator communicator;
    private RequesterManager requester;
    private OSInformation information;

    /**
     * Constructor of the class.
     *
     * @param communicator The communicator with the server.
     */
    public MainWindow(AESCommunicator communicator) {
        this.communicator = communicator;
        this.requester = new RequesterManager(communicator);

        setUndecorated(true);
        initComponents();
        setBackground(new Color(0.0F, 0.0F, 0.0F, 0.0F));
        header.seeDimiss(true);

        try {
            monitoringView.getStaticInformation();
            this.information = monitoringView.getOs();
            applicationView.setPackageManager(information.getPackageManager());
        } catch (BadExecutionException ex) {

        } catch (ConnectionException ex) {

        }

        selectedView = monitoringView;
        selectedView.start();

        setListener();
    }

    /**
     * Change the view with menu components.
     *
     * @param view The view to see.
     * @param menuLabel The label who add listener.
     */
    private void changeView(MainView view, MenuLabel menuLabel) {
        selectedView.stop();
        selectedView.setVisible(false);

        selectedView = view;

        menu.selectLabel(menuLabel);
        view.setVisible(true);
        view.start();
    }

    private void setListener() {
        menu.getMonitoringLabel().addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changeView(monitoringView, menu.getMonitoringLabel());
            }
        });

        menu.getPartitionLabel().addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changeView(partitionView, menu.getPartitionLabel());
            }
        });

        menu.getUserLabel().addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changeView(userView, menu.getUserLabel());
            }
        });

        menu.getEventLabel().addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changeView(eventView, menu.getEventLabel());
            }
        });

        menu.getProcessLabel().addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changeView(processView, menu.getProcessLabel());
            }
        });

        menu.getApplicationLabel().addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changeView(applicationView, menu.getApplicationLabel());
            }
        });

        menu.getActionsLabel().addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changeView(actionsView, menu.getActionsLabel());
            }
        });

        menu.getExitButton().addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                dispose();
            }
        });
    }

    @Override
    public void dispose() {
        super.dispose();

        try {
            requester.makeReadRequest(null, null);
            communicator.close();
        } catch (ConnectionException ex) {

        } catch (BadExecutionException ex) {

        }

        new ConnectionWindow().open();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new lagatrix.gui.components.simple.RoundPanel();
        header = new lagatrix.gui.components.complex.fragment.Header();
        menu = new lagatrix.gui.components.complex.fragment.Menu();
        viewsPanel = new javax.swing.JPanel();
        monitoringView = new lagatrix.gui.views.main.form.MonitoringView();
        actionsView = new lagatrix.gui.views.main.form.ActionsView();
        applicationView = new lagatrix.gui.views.main.form.ApplicationView();
        processView = new lagatrix.gui.views.main.form.ProcessView();
        eventView = new lagatrix.gui.views.main.form.EventView();
        userView = new lagatrix.gui.views.main.form.UserView();
        partitionView = new lagatrix.gui.views.main.form.PartitionView();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lagatrix");

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setRadius(61);

        header.setFather(this);

        viewsPanel.setBackground(new java.awt.Color(255, 255, 255));
        viewsPanel.setPreferredSize(new java.awt.Dimension(885, 552));
        viewsPanel.setLayout(new java.awt.CardLayout());

        monitoringView.setRequester(requester);
        viewsPanel.add(monitoringView, "card8");

        actionsView.setRequester(requester);
        viewsPanel.add(actionsView, "card2");

        applicationView.setRequester(requester);
        viewsPanel.add(applicationView, "card3");

        processView.setRequester(requester);
        viewsPanel.add(processView, "card4");

        eventView.setRequester(requester);
        viewsPanel.add(eventView, "card5");

        userView.setRequester(requester);
        viewsPanel.add(userView, "card6");

        partitionView.setRequester(requester);
        viewsPanel.add(partitionView, "card7");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(menu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(viewsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(menu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private lagatrix.gui.views.main.form.ActionsView actionsView;
    private lagatrix.gui.views.main.form.ApplicationView applicationView;
    private lagatrix.gui.views.main.form.EventView eventView;
    private lagatrix.gui.components.complex.fragment.Header header;
    private lagatrix.gui.components.simple.RoundPanel mainPanel;
    private lagatrix.gui.components.complex.fragment.Menu menu;
    private lagatrix.gui.views.main.form.MonitoringView monitoringView;
    private lagatrix.gui.views.main.form.PartitionView partitionView;
    private lagatrix.gui.views.main.form.ProcessView processView;
    private lagatrix.gui.views.main.form.UserView userView;
    private javax.swing.JPanel viewsPanel;
    // End of variables declaration//GEN-END:variables
}
